{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "title": "Workload entity instances",
  "$defs" : {
    "task": {
      "type": "object",
      "title": "Task",
      "oneOf": [
        {
          "type": "object",
          "required": [ "prepared_task_id" ],
          "properties": {
            "prepared_task_id": {
              "type": "string",
              "title": "Identifier of a prepared task"
            }
          }
        },
        {
          "allOf": [
            {
              "oneOf": [
                {
                  "$ref": "resource:/schemas/template.json#/$defs/task_template"
                },
                {
                  "type": "object",
                  "required": [ "template_id" ],
                  "properties": {
                    "template_id": {
                      "type": "string",
                      "title": "Template identifier",
                      "description": "Identifier of the template that this task is based on"
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "permute_order": {
                  "type": "boolean",
                  "title": "Enable scripts order permutation",
                  "description": "If task template specified a permutation orders path, this property can be used to specify whether the permutation should be applied or not"
                },
                "time_travel_phase_id": {
                  "type": "string",
                  "title": "Time travel phase identifier",
                  "description": "If the task template supports time travel, this property can be used to specify the version of the data that will be queried by this task"
                },
                "task_executor_arguments": {
                  "type": "object",
                  "title": "Task executor arguments",
                  "description": "Any arguments passed to a (custom) task executor can be defined here. Arguments set here are defined locally for a single task."
                },
                "replace_regex": {
                  "type": "array",
                  "title": "List of regex to match and replace",
                  "description": "List of regex to match and corresponding replacement in the SQL scripts associated with this task",
                  "items": {
                    "type": "object",
                    "title": "Regex to replace",
                    "required": [ "pattern", "replacement" ],
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "title": "Regex pattern to match"
                      },
                      "replacement": {
                        "type": "string",
                        "title": "Replacement for each match"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          ]
        }
      ]
    },
    "tasks_sequence": {
      "type": "object",
      "title": "Tasks sequence",
      "oneOf": [
        {
          "type": "object",
          "required": [ "prepared_tasks_sequence_id" ],
          "properties": {
            "prepared_tasks_sequence_id": {
              "type": "string",
              "title": "Identifier of a prepared tasks sequence"
            }
          }
        },
        {
          "type": "object",
          "required": [ "tasks" ],
          "properties": {
            "tasks": {
              "type": "array",
              "title": "List of tasks",
              "description": "List of tasks to be executed in sequence",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "resource:/schemas/instance.json#/$defs/task"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "session": {
      "type": "object",
      "title": "Session",
      "allOf": [
        {
          "oneOf": [
            {
              "$ref": "resource:/schemas/template.json#/$defs/session_template"
            },
            {
              "type": "object",
              "required": [ "template_id" ],
              "properties": {
                "template_id": {
                  "type": "string",
                  "title": "Template identifier",
                  "description": "Identifier of the template that this session is based on"
                }
              }
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "target_endpoint": {
              "type": "integer",
              "title": "Target endpoint index (default: 0)",
              "description": "The positional index (starting from 0) of the connection manager within the connections configuration file"
            }
          }
        }
      ]
    },
    "phase": {
      "type": "object",
      "title": "Phase",
      "allOf": [
        {
          "oneOf": [
            {
              "$ref": "resource:/schemas/template.json#/$defs/phase_template"
            },
            {
              "type": "object",
              "required": [ "template_id" ],
              "properties": {
                "template_id": {
                  "type": "string",
                  "title": "Template identifier",
                  "description": "Identifier of the template that this phase is based on"
                }
              }
            }
          ]
        },
        {
          "type": "object",
          "required": [ "id" ],
          "properties": {
            "id": {
              "type": "string",
              "title": "Identifier for the phase"
            }
          }
        }
      ]
    }
  }
}